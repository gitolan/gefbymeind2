-- File path: /path/to/your/script.lua

local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Function to create a styled button
local function createStyledButton(parent, text, position, size)
    local button = Instance.new("TextButton")
    button.Size = size or UDim2.new(1, 0, 0.2, 0)
    button.Position = position
    button.Text = text
    button.TextScaled = true
    button.Font = Enum.Font.SourceSansSemibold
    button.TextColor3 = Color3.new(1, 1, 1)
    button.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
    button.BackgroundTransparency = 0.5

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.25, 0)
    corner.Parent = button

    local blurLayer = Instance.new("Frame")
    blurLayer.Size = UDim2.new(1, 0, 1, 0)
    blurLayer.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
    blurLayer.BackgroundTransparency = 0.8
    blurLayer.ZIndex = button.ZIndex - 1
    blurLayer.Parent = button

    local cornerBlur = Instance.new("UICorner")
    cornerBlur.CornerRadius = UDim.new(0.25, 0)
    cornerBlur.Parent = blurLayer

    button.Parent = parent

    return button
end

-- Function to animate a button
local function animateButton(button)
    local tweenService = game:GetService("TweenService")
    local goal = {BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)}
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true)
    local tween = tweenService:Create(button, tweenInfo, goal)
    button.MouseButton1Click:Connect(function()
        tween:Play()
    end)
end

-- Creating the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Creating the frame to hold buttons
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 150, 0, 200)
frame.Position = UDim2.new(0, 80, 0, 10)  -- Shifted slightly to the right
frame.BackgroundTransparency = 1
frame.Parent = screenGui

-- Spacing between buttons
local buttonSpacing = 0.25

-- Creating buttons
local checkRolesButton = createStyledButton(frame, "Check and Change Role", UDim2.new(0, 0, 0 * buttonSpacing, 0))

-- Animating buttons
animateButton(checkRolesButton)

-- Function to collect all unique roles from players, excluding "Dead"
local function collectUniqueRoles()
    local roles = {}
    local roleSet = {}

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer:FindFirstChild("PlayerRole") then
            local role = otherPlayer.PlayerRole.Value
            if role ~= "Dead" and not roleSet[role] then
                table.insert(roles, role)
                roleSet[role] = true
            end
        end
    end

    return roles
end

-- Function to copy text to the clipboard
local function copyToClipboard(text)
    setclipboard(text)
end

-- Function to handle roles logic and change role
local function handleRoles()
    local uniqueRoles = collectUniqueRoles()
    if #uniqueRoles > 0 then
        local roleOptions = Instance.new("ScrollingFrame")
        roleOptions.Size = UDim2.new(0, 150, 0, 200)
        roleOptions.Position = UDim2.new(0.5, -75, 0.5, -100)
        roleOptions.CanvasSize = UDim2.new(0, 0, 0, #uniqueRoles * 50 + 50)
        roleOptions.ScrollBarThickness = 8
        roleOptions.BackgroundTransparency = 0.5
        roleOptions.BackgroundColor3 = Color3.new(0, 0, 0)
        roleOptions.Parent = screenGui

        local closeButton = createStyledButton(roleOptions, "Close", UDim2.new(0, 0, #uniqueRoles * buttonSpacing, 0))
        closeButton.MouseButton1Click:Connect(function()
            roleOptions:Destroy()
        end)

        for i, role in ipairs(uniqueRoles) do
            local roleButton = createStyledButton(roleOptions, role, UDim2.new(0, 0, (i-1) * buttonSpacing, 0))
            local mouseDownTime = 0
            local holdDuration = 2  -- Duration in seconds to consider as hold

            roleButton.MouseButton1Down:Connect(function()
                mouseDownTime = tick()
            end)

            roleButton.MouseButton1Up:Connect(function()
                local elapsed = tick() - mouseDownTime
                if elapsed >= holdDuration then
                    copyToClipboard(role)
                    local notification = Instance.new("TextLabel")
                    notification.Size = UDim2.new(0, 300, 0, 50)
                    notification.Position = UDim2.new(0.5, -150, 0.1, 0)
                    notification.Text = "Role copied to clipboard!"
                    notification.TextScaled = true
                    notification.BackgroundTransparency = 0.5
                    notification.BackgroundColor3 = Color3.new(0, 0, 0)
                    notification.TextColor3 = Color3.new(1, 1, 1)
                    notification.Parent = screenGui

                    game:GetService("Debris"):AddItem(notification, 2)
                else
                    if player:FindFirstChild("PlayerRole") then
                        player.PlayerRole.Value = role
                        handleNewRole(role)
                    else
                        local playerRole = Instance.new("StringValue")
                        playerRole.Name = "PlayerRole"
                        playerRole.Value = role
                        playerRole.Parent = player
                        handleNewRole(role)
                    end
                end
                roleOptions:Destroy()
            end)

            animateButton(roleButton)
        end

        animateButton(closeButton)
    else
        local notification = Instance.new("TextLabel")
        notification.Size = UDim2.new(0, 300, 0, 50)
        notification.Position = UDim2.new(0.5, -150, 0.1, 0)
        notification.Text = "No new roles found!"
        notification.TextScaled = true
        notification.BackgroundTransparency = 0.5
        notification.BackgroundColor3 = Color3.new(0, 0, 0)
        notification.TextColor3 = Color3.new(1, 1, 1)
        notification.Parent = screenGui

        game:GetService("Debris"):AddItem(notification, 2)
    end
end

-- Function to handle new role and copy roles to clipboard if necessary
local function handleNewRole(newRole)
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 300, 0, 50)
    notification.Position = UDim2.new(0.5, -150, 0.1, 0)
    notification.Text = "New role: " .. newRole
    notification.TextScaled = true
    notification.BackgroundTransparency = 0.5
    notification.BackgroundColor3 = Color3.new(0, 0, 0)
    notification.TextColor3 = Color3.new(1, 1, 1)
    notification.Parent = screenGui

    game:GetService("Debris"):AddItem(notification, 2)
end

-- Connecting the check roles button to the handler function
checkRolesButton.MouseButton1Click:Connect(handleRoles)